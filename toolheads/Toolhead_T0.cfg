# Source https://github.com/DraftShift/StealthChanger/blob/main/Klipper/Toolhead_T0.cfg
[mcu EBBT0]
serial: /dev/serial/by-id/usb-Klipper_rp2040_30333938340468F2-if00
restart_method: command

[adxl345 EBBT0]
cs_pin: EBBT0:gpio27
spi_software_sclk_pin: EBBT0:gpio18
spi_software_mosi_pin: EBBT0:gpio20
spi_software_miso_pin: EBBT0:gpio19
axes_map: -y,-z,x

[resonance_tester]
accel_chip: adxl345 EBBT0
probe_points:
    175, 175, 20  # an example

[neopixel T0_leds]
pin: EBBT0:gpio7
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 1
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[gcode_macro _T0_vars]
variable_logo_led_name:         "T0_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "T0_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "1,1"
# A comma-separated list of indexes of LEDs in the nozzle
gcode:
    # This section is required.  Do Not Delete.


#####################################################################
#   Extruder
#####################################################################

#Change tool number if needed in the next line, as well ast the last line
[gcode_macro EBBT0]
variable_active: 0
variable_filament_consumed: 0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    _TOOLCHANGER_DISABLE_FILAMENT_SENSORS
    SET_GCODE_VARIABLE MACRO=EBBT0 VARIABLE=active VALUE=1
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SELECT_TOOL T=0
  {% endif %}

[gcode_macro T0]
variable_realtool: "EBBT0"
variable_backuptool: ""
variable_color: ""
gcode:
  {% set consumed = printer["gcode_macro " ~ realtool].filament_consumed|int %}
  {% if consumed and backuptool %}
    { action_respond_info(realtool ~ " empty loading backup") }
    {backuptool}
  {% else %}
    { action_respond_info("Switching to " ~ realtool) }
    {realtool}
  {% endif %}


# Orbiter V2
[extruder]
step_pin: EBBT0:gpio23
dir_pin: !EBBT0:gpio24
enable_pin: !EBBT0:gpio25
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 4.637 # Calibrated
#gear_ratio: 7.5:1               # Orbiter V2
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBT0:gpio9
# PT1000
sensor_type:PT1000
sensor_pin: EBBT0: gpio29
pullup_resistor: 2200

min_temp: -250
max_temp: 350
max_power: 1.0
min_extrude_temp: 180
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120.0

pressure_advance: 0.025                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.03

control = pid
pid_kp = 28.661
pid_ki = 3.352
pid_kd = 61.265

[tmc2209 extruder]
uart_pin: EBBT0:gpio0
tx_pin: EBBT0:gpio1
interpolate: false
run_current: 0.85
sense_resistor: 0.100
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

##  Print Cooling Fan
[fan_generic EBBT0_partfan]
pin: EBBT0:gpio6

##  Hotend Fan
[heater_fan EBBT0_hotend_fan]
pin: EBBT0:gpio5
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 0.9

[tool EBBT0]
tool_number: 0
#if this were T1, then this would be extruder1, etc
extruder: extruder
#Change EBBT0_partfan to tool number
fan: fan_generic EBBT0_partfan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0
params_has_filament_sensor: True
#These are build specific, its where the tool is sititng in it's dock.
params_park_x: 9.0
params_park_y: -4.50
params_park_z: 296.700
#params_park_z: 297.700
params_safe_y: 165

# For InputShaper run per tool and enter the frequency here, the type can not
# be changed currently, so the type will be global and shared
params_input_shaper_type_x: 'mzv'
params_input_shaper_freq_x: 56.4
params_input_shaper_damping_ratio_x: 0.070
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_y: 39.2
params_input_shaper_damping_ratio_y: 0.070

[tool_probe EBBT0]
pin: EBBT0:gpio10
tool: 0
z_offset: -0.810
speed: 5.0
lift_speed: 20.0
samples: 3
samples_result: median
sample_retract_dist: 1.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder TEMP=150

[filament_switch_sensor filament_sensor_T0]
switch_pin: EBBT0:gpio3
pause_on_runout: True
event_delay: 1.0
pause_delay: 0.1
runout_gcode:
  SET_GCODE_VARIABLE MACRO=EBBT0 VARIABLE=filament_consumed VALUE=1
insert_gcode:
  M118 T0 reports: Filament Detected
  SET_GCODE_VARIABLE MACRO=EBBT0 VARIABLE=filament_consumed VALUE=0
  _FILAMENT_LOAD_INIT TOOL=0

#********************************************************************************************************

#////////////////////////////////////////Filament Unload macros/////////////////////////////////////////////////
# TODO: Make the gcode parametric
[gcode_button filament_unload_t0]
pin: EBBT0:gpio13 # remove the negation "!" for sensor v1 - use just PA9 as example
press_gcode:  # filament unload procedure   
  _UNLOAD_TANGLE_INIT TOOL=0
release_gcode: # do not add any macro call here
